for (i in 1:length(sitelist)) {
# get each site
sitehere <- sitelist[i]
# find the unique species at that site (common name)
specieslist <- unique(chelseafile$unique_speciesname_common[(chelseafile$unique_siteid)==sitehere])
# compute the sums
basalareasum <- numeric(length=length(specieslist))
for (j in 1:length(specieslist)) {
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
}
# put into a df
outputdf <- data.frame(specieslist,basalareasum)
outputdf$siteid <- sitehere
# bind onto output table
outputdffull <- rbind(outputdffull, outputdf)
}
## works!!!!  at least 98% of the way
## save csv
write.csv(outtable, file="~/Downloads/chelsea_outtable.csv", row.names=FALSE)
## problems: allspecies has some species listed twice if there is a case issue
## problems: the nice name scrubbing is too restrictive
## A: did search and replace by hand in excel on chelsea_practice.txt
## bring in data
chelseafile <- read.delim("~/Downloads/chelsea_practice.txt", stringsAsFactors=FALSE)
# strip weird characters from unique_speciesname
# install.packages("stringr")
library(stringr)
## list of every site
sitelist <- unique(chelseafile$unique_siteid)
length(sitelist)
# good - I have 32 unique site ids, as Chelsea does.  check.
## pre-start output table
allspecies <- unique(chelseafile$unique_speciesname_common)
#allspecies <- unique(toupper(chelseafile$unique_speciesname_common)) # gets rid of case issue but makes things all caps
allspecies <- sort(allspecies)
outtable <- data.table(allspecies) # cbind onto this below
## pre-start output df
outputdffull <- data.frame()
for (i in 1:length(sitelist)) {
# get each site
sitehere <- sitelist[i]
# find the unique species at that site (common name)
specieslist <- unique(chelseafile$unique_speciesname_common[(chelseafile$unique_siteid)==sitehere])
# compute the sums
basalareasum <- numeric(length=length(specieslist))
for (j in 1:length(specieslist)) {
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
}
# put into a df
outputdf <- data.frame(specieslist,basalareasum)
outputdf$siteid <- sitehere
# bind onto output table
outputdffull <- rbind(outputdffull, outputdf)
}
## works!!!!  at least 98% of the way
## save csv
write.csv(outtable, file="~/Downloads/chelsea_outtable.csv", row.names=FALSE)
## problems: allspecies has some species listed twice if there is a case issue
## problems: the nice name scrubbing is too restrictive
## A: did search and replace by hand in excel on chelsea_practice.txt
chelseafile <- read.delim("~/Downloads/chelsea_practice.txt", stringsAsFactors=FALSE)
View(chelseafile)
library(stringr)
sitelist <- unique(chelseafile$unique_siteid)
length(sitelist)
sitelist
for (i in 1:4) {
print("hi")
}
for (i in 1:4) {
print("hi")
i+3
}
for (i in 1:4) {
print("hi")
tmp<-i+3
tmp
}
for (i in 1:4) {
print("hi")
tmp<-i+3
print(tmp)
}
sitelist
allspecies <- unique(chelseafile$unique_speciesname_common)
allspecies
allspecies <- sort(allspecies)
allspecies
outtable <- data.table(allspecies)
outtable
View(outtable)
outputdffull <- data.frame()
View(outputdffull)
i=1
sitehere <- sitelist[i]
sitehere
specieslist <- unique(chelseafile$unique_speciesname_common[(chelseafile$unique_siteid)==sitehere])
specieslist
basalareasum <- numeric(length=length(specieslist))
basalareasum
j=1
specieshere <- specieslist[j]
specieshere
sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
basalareasum[j]
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
basalareasum
for (j in 1:length(specieslist)) {
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
}
basalareasum
rm(basalareasum)
basalareasum <- numeric(length=length(specieslist))
j=1
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
basalareasum
j=2
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
basalaresum
basalareasum
for (j in 1:length(specieslist)) {
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
}
basalareasum
j
j=1
specieshere <- specieslist[j]
specieshere
sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
specieshere
paste("^", specieshere, "$", sep = "", collapse = NULL)
sitehere
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
View(outtable)
outputdf <- data.frame(specieslist,basalareasum)
outputdf$siteid <- sitehere
outputdf
outputdffull
outputdffull <- rbind(outputdffull, outputdf)
outputdffull
# processing chelsea biodiv data
# 11 July 2014
# CS O'Connell, UMN EEB/IonE
# find the sum of the basal area measurements for each species at each site
## chelsea probably needs to install these packages
#install.packages("stringr")
#install.packages("data.frame")
## bring in data
chelseafile <- read.delim("~/Downloads/chelsea_practice.txt", stringsAsFactors=FALSE)
# strip weird characters from unique_speciesname
# install.packages("stringr")
library(stringr)
## list of every site
sitelist <- unique(chelseafile$unique_siteid)
length(sitelist)
# good - I have 32 unique site ids, as Chelsea does.  check.
## pre-start output table
allspecies <- unique(chelseafile$unique_speciesname_common)
#allspecies <- unique(toupper(chelseafile$unique_speciesname_common)) # gets rid of case issue but makes things all caps
allspecies <- sort(allspecies)
outtable <- data.table(allspecies) # cbind onto this below
## pre-start output df
outputdffull <- data.frame()
for (i in 1:length(sitelist)) {
# get each site
sitehere <- sitelist[i]
# find the unique species at that site (common name)
specieslist <- unique(chelseafile$unique_speciesname_common[(chelseafile$unique_siteid)==sitehere])
# compute the sums
basalareasum <- numeric(length=length(specieslist))
for (j in 1:length(specieslist)) {
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
}
# put into a df
outputdf <- data.frame(specieslist,basalareasum)
outputdf$siteid <- sitehere
# bind onto output table
outputdffull <- rbind(outputdffull, outputdf)
}
View(outtable)
write.csv(outtable, file="~/Downloads/chelsea_outtable.csv", row.names=FALSE)
View(outtable)
install.packages("dataframe")
install.packages("data.frame")
outputdffull <- data.frame()
install.packages("data.table")
.
library(stringr)
chelseafile <- read.delim("~/Downloads/chelsea_practice.txt", stringsAsFactors=FALSE)
sitelist <- unique(chelseafile$unique_siteid)
length(sitelist)
# good - I have 32 unique site ids, as Chelsea does.  check.
## pre-start output table
allspecies <- unique(chelseafile$unique_speciesname_common)
#allspecies <- unique(toupper(chelseafile$unique_speciesname_common)) # gets rid of case issue but makes things all caps
allspecies <- sort(allspecies)
outtable <- data.table(allspecies) # cbind onto this below
??data.table
DT = data.table(A=5:1,B=letters[5:1])
library(data.table)
chelseafile <- read.delim("~/Downloads/chelsea_practice.txt", stringsAsFactors=FALSE)
# strip weird characters from unique_speciesname
library(stringr)
library(data.table)
## list of every site
sitelist <- unique(chelseafile$unique_siteid)
length(sitelist)
# good - I have 32 unique site ids, as Chelsea does.  check.
## pre-start output table
allspecies <- unique(chelseafile$unique_speciesname_common)
#allspecies <- unique(toupper(chelseafile$unique_speciesname_common)) # gets rid of case issue but makes things all caps
allspecies <- sort(allspecies)
outtable <- data.table(allspecies) # cbind onto this below
## pre-start output df
outputdffull <- data.frame()
for (i in 1:length(sitelist)) {
# get each site
sitehere <- sitelist[i]
# find the unique species at that site (common name)
specieslist <- unique(chelseafile$unique_speciesname_common[(chelseafile$unique_siteid)==sitehere])
# compute the sums
basalareasum <- numeric(length=length(specieslist))
for (j in 1:length(specieslist)) {
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
}
# put into a df
outputdf <- data.frame(specieslist,basalareasum)
outputdf$siteid <- sitehere
# bind onto output table
outputdffull <- rbind(outputdffull, outputdf)
}
View(outtable)
require(data.table)
help(require)
specieslist <- unique(chelseafile$unique_speciesname_common[(chelseafile$unique_siteid)==sitehere])
specieslist
allspecies <- unique(chelseafile$unique_speciesname_common)
allspecies
allspecies <- sort(allspecies)
allspecies
path
wd
help(setwd)
getwd
getwd()
# processing chelsea biodiv data
# 11 July 2014
# CS O'Connell, UMN EEB/IonE
# find the sum of the basal area measurements for each species at each site
## if needed, install these packages
#install.packages("stringr")
#install.packages("data.table")
## bring in data
chelseafile <- read.delim("~/Downloads/chelsea_practice.txt", stringsAsFactors=FALSE)
# strip weird characters from unique_speciesname
library(stringr)
library(data.table)
## list of every site
sitelist <- unique(chelseafile$unique_siteid)
length(sitelist)
# good - I have 32 unique site ids, as Chelsea does.  check.
## pre-start output table
allspecies <- unique(chelseafile$unique_speciesname_common)
#allspecies <- unique(toupper(chelseafile$unique_speciesname_common)) # gets rid of case issue but makes things all caps
allspecies <- sort(allspecies)
outtable <- data.table(allspecies) # cbind onto this below
## pre-start output df
outputdffull <- data.frame()
for (i in 1:length(sitelist)) {
# get each site
sitehere <- sitelist[i]
# find the unique species at that site (common name)
specieslist <- unique(chelseafile$unique_speciesname_common[(chelseafile$unique_siteid)==sitehere])
# compute the sums
basalareasum <- numeric(length=length(specieslist))
for (j in 1:length(specieslist)) {
specieshere <- specieslist[j]
# get basal area for each species incidence at sitehere
basalareasum[j] <- sum(chelseafile$BA_m2[(chelseafile$unique_siteid)==sitehere & (chelseafile$unique_speciesname_common)==specieshere])
# put into outtable
specieshere_grepfix <- paste("^", specieshere, "$", sep = "", collapse = NULL)
outtable[grep(specieshere_grepfix, outtable$allspecies), sitehere] <- basalareasum[j]
}
# put into a df
outputdf <- data.frame(specieslist,basalareasum)
outputdf$siteid <- sitehere
# bind onto output table
outputdffull <- rbind(outputdffull, outputdf)
}
## works!!!!  at least 98% of the way
## save csv
write.csv(outtable, file="~/Downloads/chelsea_outtable.csv", row.names=FALSE)
## problems: allspecies has some species listed twice if there is a case issue
## problems: the nice name scrubbing is too restrictive
## A: did search and replace by hand in excel on chelsea_practice.txt
# notes for chelseaa
#
# # simple for loop
# for (i in 1:4) {
#   print("hi")
#   tmp<-i+3
#   print(tmp)
#   # put a way to save things here
#
# }
write.csv(outtable, file="~/Downloads/chelsea_outtable.csv", row.names=FALSE)
help(write.csv)
View(outtable)
write.table(outtable, file="~/Downloads/chelsea_outtable.txt", row.names=FALSE)
write.table(outtable, file="~/Downloads/chelsea_outtable.txt", row.names=FALSE, sep = " ")
# AmazonTOs_simulationscatters.R
# CSO, UMN
# 25/6/2013
# deal with the new scenario experiment results
# bring in necessary things
library(gridExtra)
library(ggplot2)
library(reshape2)
##### FIRST: DEAL WITH THE DATA
dat <- read.table("~/Dropbox/MANUSCRIPT/First attempt - Nature submission/AmazonTOs MS - Figures and tables/Figures and Tables/Figure 3/R Bargraph/PNAS version/resultscombotable3D.txt", header = TRUE)
attach(dat)
##### SECOND: CHECK OUT RESULTS ON GROUPS OF GRAPHS BY SERVICE
# look at carbon results
par(mfrow=c(2,2),oma=c(0,0,2,0),mar = c(5.1, 4.1, 2.1, 2.1))
plot(wC,EmittedC,ylim = rev(range(EmittedC)),xlab="Carbon Storage Priority Level", ylab="Tg Carbon Emitted", col="blue")
plot(wC,HabAvgImpac,xlab="Carbon Storage Priority Level", ylab="Species Ranges Affected")
plot(wC,DelHAvgImpac,xlab="Carbon Storage Priority Level", ylab=expression(Delta~degree*Celcius))
plot(wC,DelQAvgImpac,ylim = rev(range(DelQAvgImpac)),xlab="Carbon Storage Priority Level", ylab=expression(Delta~mm~H[2]*O/Day))
title("Impacts when you vary carbon prioritization", outer=TRUE)
# look at habitat results
par(mfrow=c(2,2),oma=c(0,0,2,0),mar = c(5.1, 4.1, 2.1, 2.1))
plot(wB,EmittedC,ylim = rev(range(EmittedC)),xlab="Habitat Priority Level", ylab="Tg Carbon Emitted")
plot(wB,HabAvgImpac,xlab="Habitat Priority Level", ylab="Species Ranges Affected", col="blue")
plot(wB,DelHAvgImpac,xlab="Habitat Priority Level", ylab=expression(Delta~degree*Celcius))
plot(wB,DelQAvgImpac,ylim = rev(range(DelQAvgImpac)),xlab="Habitat Priority Level", ylab=expression(Delta~mm~H[2]*O/Day))
title("Impacts when you vary Habitat prioritization", outer=TRUE)
# look at regclim results
par(mfrow=c(2,2),oma=c(0,0,2,0),mar = c(5.1, 4.1, 2.1, 2.1))
plot(wCl,EmittedC,ylim = rev(range(EmittedC)),xlab="Regional Climate Priority Level", ylab="Tg Carbon Emitted")
plot(wCl,HabAvgImpac,xlab="Regional Climate Priority Level", ylab="Species Ranges Affected")
plot(wCl,DelHAvgImpac,xlab="Regional Climate Priority Level", ylab=expression(Delta~degree*Celcius), col="blue")
plot(wCl,DelQAvgImpac,ylim = rev(range(DelQAvgImpac)),xlab="Regional Climate Priority Level", ylab=expression(Delta~mm~H[2]*O/Day), col="blue")
title("Impacts when you vary regional climate prioritization", outer=TRUE)
##### THIRD: CHECK OUT RESULTS IN ONE BIG FIGURE
par(mfrow=c(3,4),oma=c(0,0,2,0),mar = c(5.1, 4.1, 2.1, 2.1))
plot(wC,EmittedC,ylim = rev(range(EmittedC)),xlab="Carbon Storage Priority Level", ylab="Tg Carbon Emitted", col="blue")
plot(wC,HabAvgImpac,xlab="Carbon Storage Priority Level", ylab="Species Ranges Affected")
plot(wC,DelHAvgImpac,xlab="Carbon Storage Priority Level", ylab=expression(Delta~degree*Celcius))
plot(wC,DelQAvgImpac,ylim = rev(range(DelQAvgImpac)),xlab="Carbon Storage Priority Level", ylab=expression(Delta~mm~H[2]*O/Day))
plot(wB,EmittedC,ylim = rev(range(EmittedC)),xlab="Habitat Priority Level", ylab="Tg Carbon Emitted")
plot(wB,HabAvgImpac,xlab="Habitat Priority Level", ylab="Species Ranges Affected", col="blue")
plot(wB,DelHAvgImpac,xlab="Habitat Priority Level", ylab=expression(Delta~degree*Celcius))
plot(wB,DelQAvgImpac,ylim = rev(range(DelQAvgImpac)),xlab="Habitat Priority Level", ylab=expression(Delta~mm~H[2]*O/Day))
plot(wCl,EmittedC,ylim = rev(range(EmittedC)),xlab="Regional Climate Priority Level", ylab="Tg Carbon Emitted")
plot(wCl,HabAvgImpac,xlab="Regional Climate Priority Level", ylab="Species Ranges Affected")
plot(wCl,DelHAvgImpac,xlab="Regional Climate Priority Level", ylab=expression(Delta~degree*Celcius), col="blue")
plot(wCl,DelQAvgImpac,ylim = rev(range(DelQAvgImpac)),xlab="Regional Climate Priority Level", ylab=expression(Delta~mm~H[2]*O/Day), col="blue")
title("Impacts when you vary how services are prioritized", outer=TRUE)
##### FOURTH: CHECK OUT RESULTS IN ONE BIG FIGURE, ONLY ONE REGCLIM COLUMN
par(mfrow=c(3,3),oma=c(0,0,2,0),mar = c(5.1, 4.1, 2.1, 2.1))
plot(wC,EmittedC,ylim = rev(range(EmittedC)),xlab="Carbon Storage Priority Level", ylab="Tg Carbon Emitted", col="blue")
plot(wC,HabAvgImpac,xlab="Carbon Storage Priority Level", ylab="Species Ranges Affected")
plot(wC,ClimRegIndexAvgImpac  ,xlab="Carbon Storage Priority Level", ylab="Regional Climate Impacts Index")
plot(wB,EmittedC,ylim = rev(range(EmittedC)),xlab="Habitat Priority Level", ylab="Tg Carbon Emitted")
plot(wB,HabAvgImpac,xlab="Habitat Priority Level", ylab="Species Ranges Affected", col="blue")
plot(wB,ClimRegIndexAvgImpac  ,xlab="Habitat Priority Level", ylab="Regional Climate Impacts Index")
plot(wCl,EmittedC,ylim = rev(range(EmittedC)),xlab="Regional Climate Priority Level", ylab="Tg Carbon Emitted")
plot(wCl,HabAvgImpac,xlab="Regional Climate Priority Level", ylab="Species Ranges Affected")
plot(wCl,ClimRegIndexAvgImpac  ,xlab="Regional Climate Priority Level", ylab="Regional Climate Impacts Index", col="blue")
title("Impacts when you vary how services are prioritized", outer=TRUE)
##### FOURTH PART B: CHECK OUT RESULTS IN ONE BIG FIGURE, ONLY ONE REGCLIM COLUMN, ADD LOESS, GGPLOT
# can use linear regression and not loess
# https://sites.google.com/site/davidsstatistics/using-r/smoothing-curves
# ggplot(dat, aes(x=wC, y=EmittedC)) +
#   geom_point(shape=1) +    # Use hollow circles
#   geom_smooth(method=lm) # linear regression
plot1 <- ggplot(dat, aes(x=wC, y=EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + scale_y_reverse()
plot2 <- ggplot(dat, aes(x=wC, y=HabAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Carbon Storage Priority Level") + theme(legend.position="none")
plot3 <- ggplot(dat, aes(x=wC, y=ClimRegIndexAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Impacts Index") + xlab("Carbon Storage Priority Level") + theme(legend.position="none")
plot4 <- ggplot(dat, aes(x=wB, y=EmittedC)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Habitat Priority Level") + theme(legend.position="none") + scale_y_reverse()
plot5 <- ggplot(dat, aes(x=wB, y=HabAvgImpac)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Habitat Priority Level") + theme(legend.position="none")
plot6 <- ggplot(dat, aes(x=wB, y=ClimRegIndexAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Impacts Index") + xlab("Habitat Priority Level") + theme(legend.position="none")
plot7 <- ggplot(dat, aes(x=wCl, y=EmittedC)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Regional Climate Priority Level") + theme(legend.position="none") + scale_y_reverse()
plot8 <- ggplot(dat, aes(x=wCl, y=HabAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Regional Climate Priority Level") + theme(legend.position="none")
plot9 <- ggplot(dat, aes(x=wCl, y=ClimRegIndexAvgImpac)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Impacts Index") + xlab("Regional Climate Priority Level") + theme(legend.position="none")
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, plot7, plot8, plot9, ncol=3, main=textGrob("Impacts when you vary how services are prioritized",gp=gpar(fontsize=20,font=1),just="top"))
##### FOURTH PART C: CORRELATION FOR EACH, PRINT ON GRAPH
cor1t <- cor.test(wC, -EmittedC) # default method is "pearson"
cor2t <- cor.test(wC, HabAvgImpac)
cor3t <- cor.test(wC, ClimRegIndexAvgImpac)
cor4t <- cor.test(wB, -EmittedC)
cor5t <- cor.test(wB, HabAvgImpac)
cor6t <- cor.test(wB, ClimRegIndexAvgImpac)
cor7t <- cor.test(wCl, -EmittedC)
cor8t <- cor.test(wCl, HabAvgImpac)
cor9t <- cor.test(wCl, ClimRegIndexAvgImpac)
cor_stars <- numeric(length=9)
# cycle through to set number of stars
for (i in 1:9 ) {
corpval <- paste("cor",i,"t$p.value",sep="")
if(eval(parse(text=corpval)) < 0.001){
cor_stars[i] <- "***"
} else if(eval(parse(text=corpval)) < 0.01){
cor_stars[i] <- "**"
} else if(eval(parse(text=corpval)) < 0.05){
cor_stars[i] <- "*"
} else {
cor_stars[i] <- " "
}
}
## now plot, but add text with the cor and *** values
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot2 <- ggplot(dat, aes(x=wC, y=HabAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(475,1450) + geom_text(aes(label=paste("ρ =", round(cor2t$estimate,4), cor_stars[2])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot3 <- ggplot(dat, aes(x=wC, y=ClimRegIndexAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Index") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(0.15,0.7) + geom_text(aes(label=paste("ρ =", round(cor3t$estimate,4), cor_stars[3])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot4 <- ggplot(dat, aes(x=wB, y=-EmittedC)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Habitat Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor4t$estimate,4), cor_stars[4])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot5 <- ggplot(dat, aes(x=wB, y=HabAvgImpac)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Habitat Priority Level") + theme(legend.position="none") + ylim(475,1450) + geom_text(aes(label=paste("ρ =", round(cor5t$estimate,4), cor_stars[5])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot6 <- ggplot(dat, aes(x=wB, y=ClimRegIndexAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Index") + xlab("Habitat Priority Level") + theme(legend.position="none") + ylim(0.15,0.7) + geom_text(aes(label=paste("ρ =", round(cor6t$estimate,4), cor_stars[6])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot7 <- ggplot(dat, aes(x=wCl, y=-EmittedC)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Regional Climate Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor7t$estimate,4), cor_stars[7])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot8 <- ggplot(dat, aes(x=wCl, y=HabAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Regional Climate Priority Level") + theme(legend.position="none") + ylim(475,1450) + geom_text(aes(label=paste("ρ =", round(cor8t$estimate,4), cor_stars[8])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot9 <- ggplot(dat, aes(x=wCl, y=ClimRegIndexAvgImpac)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Index") + xlab("Regional Climate Priority Level") + theme(legend.position="none") + ylim(0.15,0.7) + geom_text(aes(label=paste("ρ =", round(cor9t$estimate,4), cor_stars[9])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, plot7, plot8, plot9, ncol=3, main=textGrob("Impacts when you vary how services are prioritized",gp=gpar(fontsize=20,font=1),just="top"))
##### FINALLY: SAVE FIGURE
# This is the one to save!
dir="~/Dropbox/MANUSCRIPT/First attempt - Nature submission/AmazonTOs MS - Figures and tables/Figures and Tables/Figure 3/R Bargraph/PNAS version/"
setwd(dir)
getwd()
# high res
png(file = "AmazonTOs_simulationscatters_hires.png",width=10,height=10,units="in",res=1200) # tiff(file=...) also an option
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, plot7, plot8, plot9, ncol=3)
dev.off()
png(file = "AmazonTOs_simulationscatters_hires.png",width=10,height=10,units="in",res=600) # tiff(file=...) also an option
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, plot7, plot8, plot9, ncol=3)
dev.off()
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=20))
plot1
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=40))
plot1
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=40),axis.title=element_text(size=20,face="bold"))
plot1
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=40),axis.title=element_text(size=40))
plot1
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=14),axis.title=element_text(size=40))
plot1
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=14),axis.title=element_text(size=30))
plot1
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=30))
plot1
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plot1
plotf1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf2 <- ggplot(dat, aes(x=wC, y=HabAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(475,1450) + geom_text(aes(label=paste("ρ =", round(cor2t$estimate,4), cor_stars[2])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf3 <- ggplot(dat, aes(x=wC, y=ClimRegIndexAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Index") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(0.15,0.7) + geom_text(aes(label=paste("ρ =", round(cor3t$estimate,4), cor_stars[3])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf4 <- ggplot(dat, aes(x=wB, y=-EmittedC)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Habitat Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor4t$estimate,4), cor_stars[4])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf5 <- ggplot(dat, aes(x=wB, y=HabAvgImpac)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Habitat Priority Level") + theme(legend.position="none") + ylim(475,1450) + geom_text(aes(label=paste("ρ =", round(cor5t$estimate,4), cor_stars[5])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf6 <- ggplot(dat, aes(x=wB, y=ClimRegIndexAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Index") + xlab("Habitat Priority Level") + theme(legend.position="none") + ylim(0.15,0.7) + geom_text(aes(label=paste("ρ =", round(cor6t$estimate,4), cor_stars[6])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf7 <- ggplot(dat, aes(x=wCl, y=-EmittedC)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Regional Climate Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor7t$estimate,4), cor_stars[7])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf8 <- ggplot(dat, aes(x=wCl, y=HabAvgImpac)) + geom_point(colour = "black", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Species Ranges Affected") + xlab("Regional Climate Priority Level") + theme(legend.position="none") + ylim(475,1450) + geom_text(aes(label=paste("ρ =", round(cor8t$estimate,4), cor_stars[8])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
plotf9 <- ggplot(dat, aes(x=wCl, y=ClimRegIndexAvgImpac)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Regional Climate Index") + xlab("Regional Climate Priority Level") + theme(legend.position="none") + ylim(0.15,0.7) + geom_text(aes(label=paste("ρ =", round(cor9t$estimate,4), cor_stars[9])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame()) + theme(axis.text=element_text(size=18),axis.title=element_text(size=24))
png(file = "AmazonTOs_simulationscatters_hires.png",width=10,height=10,units="in",res=600) # tiff(file=...) also an option
grid.arrange(plotf1, plotf2, plotf3, plotf4, plotf5, plotf6, plotf7, plotf8, plotf9, ncol=3)
dev.off()
# high res copy
png(file = "AmazonTOs_simulationscatters_hires.png",width=10,height=10,units="in",res=600) # tiff(file=...) also an option
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, plot7, plot8, plot9, ncol=3)
dev.off()
t add text with the cor and *** values
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
plot1 <- ggplot(dat, aes(x=wC, y=-EmittedC)) + geom_point(colour = "blue", shape=1) + geom_smooth(size = 1.5, fill="#333333", colour="black") + ylab("Tg Carbon Emitted") + xlab("Carbon Storage Priority Level") + theme(legend.position="none") + ylim(1.25e10,3.6e10) + geom_text(aes(label=paste("ρ =", round(cor1t$estimate,4), cor_stars[1])),x=-Inf, y=Inf, hjust=-0.1, vjust=1.5, data = data.frame())
# high res copy
png(file = "AmazonTOs_simulationscatters_hires.png",width=10,height=10,units="in",res=600) # tiff(file=...) also an option
grid.arrange(plot1, plot2, plot3, plot4, plot5, plot6, plot7, plot8, plot9, ncol=3)
dev.off()
